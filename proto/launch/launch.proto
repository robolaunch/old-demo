syntax="proto3";
package launch;
option go_package="launch/api/launchpb";

// Create & Delete Keycloak users

message User {
    string username = 1;
    string password = 2;
    string email = 3;
    string organization = 4;
    
}

message UserCreateRequest {
    User user = 1;
}

message UserDeleteRequest {
    string username = 1;
}

message UserResponse {
    bool is_ok = 1;
    User user = 2;
}

// Manage lifecycle of robot launches

message Launch {
    string username = 1;
    string name = 2;
    string robot_type = 3;
    string namespace = 4;
    bool workload_status= 5;
}

message LaunchDetail {
    string username = 1;
    string name = 2;
    string robot_type = 3;
    string namespace = 4;
    bool workload_status= 5;
    string node_ip=6;
    int32 node_port =7;
    int32 theia_port= 8;
}

message ListLaunchResponse{
    repeated Launch launches=1;
}

message ListLaunchRequest{
}

message LaunchCreateRequest {
    Launch launch = 1;
}

message LaunchDetailRequest {
    string username = 1;
    string name = 2;
    string namespace = 3;
}

message LaunchDetailResponse {
    LaunchDetail launch=1;
}


message LaunchDeleteRequest {
    string username = 1;
    string name = 2;
    string namespace = 3;
}

message LaunchResponse {
    bool is_ok = 1;
    Launch launch = 2;
}

service LaunchService{
    rpc CreateUser(UserCreateRequest) returns (UserResponse);
    rpc DeleteUser(UserDeleteRequest) returns (UserResponse);
    rpc CreateLaunch(LaunchCreateRequest) returns (LaunchResponse);
    rpc DeleteLaunch(LaunchDeleteRequest) returns (LaunchResponse);
    rpc ListLaunch(ListLaunchRequest) returns (ListLaunchResponse);
    rpc GetLaunch(LaunchDetailRequest) returns (LaunchDetailResponse);
    rpc StartLaunch(LaunchDeleteRequest) returns (LaunchResponse);
    rpc StopLaunch(LaunchDeleteRequest) returns (LaunchResponse);
}

